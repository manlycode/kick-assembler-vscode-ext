{
	"name": "kick-assembler-vscode-ext",
	"displayName": "Kick Assembler (C64) for Visual Studio Code",
	"description": "Kick Assembler (C64) IDE Extension for Visual Studio Code",
	"author": "Paul Hocker",
	"license": "MIT",
	"version": "0.2.8-dev",
	"repository": {
		"type": "git",
		"url": "https://gitlab.com/retro-coder/commodore/kick-assembler-vscode-ext"
	},
	"publisher": "paulhocker",
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"kick",
		"assembler",
		"kickassembler",
		"c64",
		"6502"
	],
	"engines": {
		"vscode": "^1.23.0"
	},
	"activationEvents": [
		"onLanguage:kickassembler"
	],
	"main": "./client/out/extension",
	"contributes": {
		"keybindings": [
			{
				"command": "kickassembler.buildandrun",
				"key": "f5"
			},
			{
				"command": "kickassembler.buildanddebug",
				"key": "f6"
			},
			{
				"command": "kickassembler.run",
				"key": "ctrl+f5"
			},
			{
				"command": "kickassembler.debug",
				"key": "ctrl+f6"
			},
			{
				"command": "kickassembler.build",
				"key": "ctrl+shift+b"
			}
		],
		"commands": [
			{
				"command": "kickassembler.build",
				"title": "Kick Assembler: Build"
			},
			{
				"command": "kickassembler.buildandrun",
				"title": "Kick Assembler: Build and Run Program"
			},
			{
				"command": "kickassembler.buildanddebug",
				"title": "Kick Assembler: Build and Debug Program"
			},
			{
				"command": "kickassembler.run",
				"title": "Kick Assembler: Run Program"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Kick Assembler",
			"properties": {
				"kickassembler.assemblerJar": {
					"type": "string",
					"default": "kickass.jar",
					"description": "Full path to your Kick Assembler JAR file."
				},
				"kickassembler.javaRuntime": {
					"type": "string",
					"default": "java.exe",
					"description": "Full path to your Java runtime."
				},
				"kickassembler.javaAllowFileCreation": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Enable the **createFile** functionality"
				},
				"kickassembler.emulatorRuntime": {
					"type": "string",
					"default": "",
					"description": "Full path to your emulator runtime."
				},
				"kickassembler.emulatorOptions": {
					"type": "string",
					"default": "-a",
					"description": "Runtime options for your emulator."
				},
				"kickassembler.debuggerRuntime": {
					"type": "string",
					"default": "",
					"description": "Full path to your debugger runtime."
				},
				"kickassembler.debuggerOptions": {
					"type": "string",
					"default": "-wait 2500 -autojmp",
					"description": "Runtime options for your debugger."
				},
				"kickassembler.debuggerDumpFile": {
					"type": "boolean",
					"default": true,
					"description": "Dump an *.dbg infofile for c64debugger"
				},
				"kickassembler.outputDirectory": {
					"type": "string",
					"default": "",
					"description": "Where to store output files generated by Kick Assembler (no trailing slashes)"
				},
				"kickassembler.autoAssembleTrigger": {
					"type": "string",
					"enum": [
						"onChange and onSave",
						"onSave only"
					],
					"default": "onChange and onSave",
					"markdownDescription": "Which event should trigger automatic assembling for code inspection purposes.\n> Hint: Using **onSave only** in combination with `#files.autoSave#` **afterDelay** could improve performance"
				},
				"kickassembler.trace.server": {
					"scope": "window",
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off",
					"description": "Traces the communication between VS Code and the language server."
				},
				"kickassembler.completionParameterPlaceholders": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Insert placeholder parameters on function/macro completions.\n>Attention: Intellisense in placeholders won't work until you disable `#editor.suggest.snippetsPreventQuickSuggestions#`"
				},
				"kickassembler.fileTypesBinary": {
					"type": "string",
					"default": "",
					"markdownDescription": "Comma separated list of file extensions for **LoadBinary()** or **.import binary**"
				},
				"kickassembler.fileTypesSid": {
					"type": "string",
					"default": "sid,prg",
					"markdownDescription": "Comma separated list of file extensions for **LoadSid()**"
				},
				"kickassembler.fileTypesPicture": {
					"type": "string",
					"default": "gif,jpg",
					"markdownDescription": "Comma separated list of file extensions for **LoadPicture()**"
				},
				"kickassembler.fileTypesSource": {
					"type": "string",
					"default": "asm,src,s,kick,a,ka",
					"markdownDescription": "Comma separated list of file extensions for **.import source** or **#import**"
				},
				"kickassembler.fileTypesC64": {
					"type": "string",
					"default": "prg,c64",
					"markdownDescription": "Comma separated list of file extensions for **.import c64**"
				},
				"kickassembler.fileTypesText": {
					"type": "string",
					"default": "txt",
					"markdownDescription": "Comma separated list of file extensions for **.import text**"
				}
			}
		},
		"languages": [
			{
				"id": "kickassembler",
				"aliases": [
					"Kick",
					"Assembler",
					"KickAssembler",
					"Assembly",
					"6502"
				],
				"extensions": [
					".asm",
					".macro"
				],
				"configuration": "./client/syntaxes/language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "kickassembler",
				"scopeName": "source.assembly.kickassembler",
				"path": "./client/syntaxes/kickassembler.tmLanguage"
			}
		]
	},
	"scripts": {
		"vscode:prepublish_bak": "npm run compile",
		"vscode:prepublish": "cd client && npm run update-vscode && cd .. && npm run compile",
		"compile:client": "tsc -p ./client/tsconfig.json",
		"compile:server": "tsc -p ./server/tsconfig.json",
		"watch:client": "tsc -w -p ./client/tsconfig.json",
		"watch:server": "tsc -w -p ./server/tsconfig.json",
		"compile": "npm run compile:client && npm run compile:server",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test": "sh ./scripts/e2e.sh"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.7",
		"@types/node": "^10.10.0",
		"typescript": "2.8.3",
		"webpack": "^4.41.5",
		"webpack-cli": "^3.3.10"
	}
}
